services:
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: ${SERVICE_NAME}
    restart: unless-stopped
    hostname: ${SERVICE_NAME}.${MY_DOMAIN}
    environment:
      GITLAB_OMNIBUS_CONFIG: >
        external_url 'http://${SERVICE_NAME}.${MY_DOMAIN}'

        gitlab_rails['gitlab_shell_ssh_port'] = 2222

        gitlab_rails['omniauth_providers'] = [{
          name: "openid_connect", # do not change this parameter
          label: "Keycloak", # optional label for login button, defaults to "Openid Connect"
          args: {
            name: "openid_connect",
            scope: ["openid", "profile", "email"],
            response_type: "code",
            issuer: "${OIDC_ISSUER_URL}",
            client_auth_method: "query",
            discovery: true,
            uid_field: "preferred_username",
            pkce: true,
            client_options: {
              identifier: "gitlab",
              secret: "${OIDC_CLIENT_SECRET}",
              redirect_uri: "https://${SERVICE_NAME}.${MY_DOMAIN}/users/auth/openid_connect/callback"
            }
          }
        }]
    ports:
      - 2222:2222
    volumes:
      - ./config:/etc/gitlab
      - ./logs:/var/log/gitlab
      - ./data:/var/opt/gitlab
    shm_size: 256m
    dns:
      - ${DNS_SERVER}
    networks:
      - default
      - proxy
      - external
    labels:
      - homepage.name=GitLab
      - homepage.description=Version control and CI/CD
      - homepage.icon=gitlab
      - homepage.href=https://${SERVICE_NAME}.${MY_DOMAIN}
      - homepage.group=Dev & Automation
      - traefik.enable=true
      - traefik.http.routers.${SERVICE_NAME}.entrypoints=http
      - traefik.http.routers.${SERVICE_NAME}.rule=Host(`${SERVICE_NAME}.${MY_DOMAIN}`)
      - traefik.http.routers.${SERVICE_NAME}.middlewares=default-whitelist@file
      - traefik.http.middlewares.${SERVICE_NAME}-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.${SERVICE_NAME}.middlewares=${SERVICE_NAME}-https-redirect
      - traefik.http.routers.${SERVICE_NAME}-secure.entrypoints=https
      - traefik.http.routers.${SERVICE_NAME}-secure.rule=Host(`${SERVICE_NAME}.${MY_DOMAIN}`)
      - traefik.http.routers.${SERVICE_NAME}-secure.tls=true
      - traefik.http.routers.${SERVICE_NAME}-secure.service=${SERVICE_NAME}
      - traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=${SERVICE_INTERNAL_PORT}
      - traefik.docker.network=proxy
networks:
  proxy:
    external: true
  external:
    external: true
